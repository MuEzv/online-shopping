version: '3.9'

services:
  mysql:
    image: mysql:8.0.33
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: AccountService
#    ports:
#      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -uroot -proot || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 20
    networks:
      - microservices-network

  eureka-service:
    build:
      context: ./EurekaService
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    networks:
      - microservices-network
    environment:
      - SPRING_PROFILES_ACTIVE=dev

  gateway-service:
    build:
      context: ./GatewayService
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    networks:
      - microservices-network
    environment:
      - SPRING_PROFILES_ACTIVE=dev
    depends_on:
      eureka-service:
        condition: service_started

  account-service:
    build:
      context: ./AccountService
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    networks:
      - microservices-network
    depends_on:
      mysql:
        condition: service_healthy
      eureka-service:
        condition: service_started
    environment:
      - SPRING_PROFILES_ACTIVE=dev


  item-service:
    dns:
      - 8.8.8.8
      - 8.8.4.4
    build:
      context: ./ItemService
      dockerfile: Dockerfile
#---------DevTool hotupdate
    volumes:
      - ./src:/ItemService/src
#      - ./target:/ItemService/target
    environment:
      - SPRING_DEVTOOLS_RESTART_TRIGGER_FILE=/ItemService/src
      - SPRING_PROFILES_ACTIVE=dev
#-----------------------
    ports:
      - "8081:8081"
    networks:
      - microservices-network
#    environment:
#      - SPRING_PROFILES_ACTIVE=dev
    depends_on:
      eureka-service:
        condition: service_started

  order-service:
    build:
      context: ./OrderService
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    networks:
      - microservices-network
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - ASTRA_DB_TOKEN={ASTRA_DB_TOKEN}


  payment-service:
    build:
      context: ./PaymentService
      dockerfile: Dockerfile
    ports:
      - "8084:8084"
    networks:
      - microservices-network
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - ASTRA_DB_TOKEN={ASTRA_DB_TOKEN}


networks:
  microservices-network:
    driver: bridge

volumes:
  mysql-data: